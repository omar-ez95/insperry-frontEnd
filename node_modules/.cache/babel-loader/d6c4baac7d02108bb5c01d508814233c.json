{"ast":null,"code":"import _slicedToArray from\"/home/omar/Documents/inspery-FrontEnd/inspery/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import PropTypes from\"prop-types\";import React,{useState,useEffect,useContext}from\"react\";import axios from\"axios\";import{useNavigate}from\"react-router-dom\";import{Context}from\"../../contexts/UserContext\";function LogIn(props){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),username=_useState2[0],setUsername=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var navigate=useNavigate();var _useContext=useContext(Context),setUser=_useContext.setUser,isAuthenticated=_useContext.isAuthenticated,setIsAuthenticated=_useContext.setIsAuthenticated,setToken=_useContext.setToken;// if the user in logged in he will be redirected to the main page\nuseEffect(function(){if(isAuthenticated){navigate(\"/\");}},[isAuthenticated,navigate]);var logIn=function logIn(){var formData=new FormData();formData.append(\"username\",username);formData.append(\"password\",password);axios.defaults.xsrfCookieName='csrftoken';axios.defaults.xsrfHeaderName='X-CSRFToken';axios.post('http://18.192.205.152/api/auth/login',formData,{headers:{'Content-Type':'application/json'}}).then(function(res){setIsAuthenticated(true);setToken(res.data.token);setUser(res.data.user);var userData=res.data;localStorage.setItem('userData',JSON.stringify(userData));props.history.push(\"/\");}).catch(function(err){});};LogIn.propTypes={isAuthenticated:PropTypes.bool};var onSubmit=function onSubmit(e){e.preventDefault();logIn();};var LogInForm=/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-6 m-auto\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card card-body mt-5\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"text-center\"},\"Login\"),/*#__PURE__*/React.createElement(\"form\",{onSubmit:onSubmit},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"User Name\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"form-control\",name:\"userName\",onChange:function onChange(e){return setUsername(e.target.value);},value:username})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Password\"),/*#__PURE__*/React.createElement(\"input\",{type:\"password\",className:\"form-control\",name:\"password\",onChange:function onChange(e){return setPassword(e.target.value);},value:password})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"button\",{type:\"submit\",className:\"btn btn-primary\"},\"LogIn\")))));return LogInForm;}export default LogIn;","map":{"version":3,"sources":["/home/omar/Documents/inspery-FrontEnd/inspery/src/components/accounts/LogIn.js"],"names":["PropTypes","React","useState","useEffect","useContext","axios","useNavigate","Context","LogIn","props","username","setUsername","password","setPassword","navigate","setUser","isAuthenticated","setIsAuthenticated","setToken","logIn","formData","FormData","append","defaults","xsrfCookieName","xsrfHeaderName","post","headers","then","res","data","token","user","userData","localStorage","setItem","JSON","stringify","history","push","catch","err","propTypes","bool","onSubmit","e","preventDefault","LogInForm","target","value"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate} from \"react-router-dom\"\n\nimport {Context} from \"../../contexts/UserContext\"\n\n\nfunction LogIn(props) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  \n  const navigate = useNavigate()\n\n  const {setUser, isAuthenticated, setIsAuthenticated, setToken} = useContext(Context)\n  \n  // if the user in logged in he will be redirected to the main page\n  useEffect(() => {\n    if(isAuthenticated){\n      navigate(\"/\");\n     }\n  }, [isAuthenticated,navigate])\n\n  const logIn = () => {\n    var formData = new FormData();\n    formData.append(\"username\", username); \n    formData.append(\"password\", password); \n    axios.defaults.xsrfCookieName = 'csrftoken'\n    axios.defaults.xsrfHeaderName = 'X-CSRFToken'\n    axios\n      .post('http://18.192.205.152/api/auth/login', formData, {\n        headers: {\n          'Content-Type': 'application/json',\n        }\n    })\n      .then((res) => {\n        setIsAuthenticated(true)\n        setToken(res.data.token)\n        setUser(res.data.user)\n        const userData = res.data\n          localStorage.setItem('userData', JSON.stringify(userData))\n        props.history.push(\"/\");\n      })\n      .catch((err) => {\n\n      });\n  };\n\n  LogIn.propTypes = {\n    isAuthenticated: PropTypes.bool,\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    logIn();\n    \n  }\n\n  const LogInForm = (\n    <div className=\"col-md-6 m-auto\">\n      <div className=\"card card-body mt-5\">\n        <h2 className=\"text-center\">Login</h2>\n        <form onSubmit={onSubmit}>\n          <div className=\"form-group\">\n            <label>User Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"userName\"\n              onChange={(e) => setUsername(e.target.value)}\n              value={username}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Password</label>\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              name=\"password\"\n              onChange={(e) => setPassword(e.target.value)}\n              value={password}\n            />\n          </div>\n          <div className=\"form-group\">\n            <button type=\"submit\" className=\"btn btn-primary\">\n              LogIn\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n  \n    \n\n  return (\n      LogInForm \n  )\n}\n\nexport default LogIn;\n"]},"metadata":{},"sourceType":"module"}