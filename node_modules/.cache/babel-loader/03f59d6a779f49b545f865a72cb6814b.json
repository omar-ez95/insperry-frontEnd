{"ast":null,"code":"import _slicedToArray from\"/home/omar/Documents/inspery-FrontEnd/inspery/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from\"react\";// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Default_parameters\nfunction Toggler(){var defaultOnValue=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;// Create the state\nvar _useState=useState(defaultOnValue),_useState2=_slicedToArray(_useState,2),isToggledOn=_useState2[0],setIsToggledOn=_useState2[1];// Create a function for easily flipping the isToggledOn value\nfunction toggle(){setIsToggledOn(function(prev){return!prev;});}// Return something useful for whatever component will be using this hook\nreturn[isToggledOn,toggle];}export default Toggler;","map":{"version":3,"sources":["/home/omar/Documents/inspery-FrontEnd/inspery/src/customHooks/Toggler.js"],"names":["useState","Toggler","defaultOnValue","isToggledOn","setIsToggledOn","toggle","prev"],"mappings":"oKAAA,OAAQA,QAAR,KAAuB,OAAvB,CACA;AACA,QAASC,CAAAA,OAAT,EAAyC,IAAxBC,CAAAA,cAAwB,2DAAP,KAAO,CACrC;AACA,cAAsCF,QAAQ,CAACE,cAAD,CAA9C,wCAAOC,WAAP,eAAoBC,cAApB,eAEA;AACA,QAASC,CAAAA,MAAT,EAAkB,CACdD,cAAc,CAAC,SAAAE,IAAI,QAAI,CAACA,IAAL,EAAL,CAAd,CACH,CAED;AACA,MAAO,CAACH,WAAD,CAAcE,MAAd,CAAP,CACH,CAED,cAAeJ,CAAAA,OAAf","sourcesContent":["import {useState} from \"react\"\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Default_parameters\nfunction Toggler(defaultOnValue = false) {\n    // Create the state\n    const [isToggledOn, setIsToggledOn] = useState(defaultOnValue)\n    \n    // Create a function for easily flipping the isToggledOn value\n    function toggle() {\n        setIsToggledOn(prev => !prev)\n    }\n    \n    // Return something useful for whatever component will be using this hook\n    return [isToggledOn, toggle]\n}\n\nexport default Toggler"]},"metadata":{},"sourceType":"module"}