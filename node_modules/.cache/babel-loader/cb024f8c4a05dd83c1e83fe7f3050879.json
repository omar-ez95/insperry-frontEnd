{"ast":null,"code":"var _jsxFileName = \"/home/omar/Documents/inspery-FrontEnd/inspery/src/components/comments/ProductComments.js\";\nimport React, { useEffect, useContext, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Context } from '../../contexts/UserContext';\nimport ProfilePhoto from \"../profile/ProfilePhoto\";\n\nfunction ProductComments(_ref) {\n  let {\n    id,\n    restaurant\n  } = _ref;\n  const {\n    user,\n    isAuthenticated\n  } = useContext(Context);\n  const [comments, setComments] = useState([]);\n  const [owner] = useState(parseInt(user.id));\n  const [body, setBody] = useState('');\n  const [date] = useState(new Date());\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (isAuthenticated === false) {\n      navigate(\"/login\");\n    }\n\n    const getProductComments = () => {\n      axios.get(`http://18.192.205.152/api/product_comments/${id}`).then(res => {\n        setComments(res.data);\n      }).catch(err => console.log(err));\n    };\n\n    getProductComments();\n  }, [id, isAuthenticated, navigate]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const comment = {\n      date,\n      owner,\n      restaurant,\n      body,\n      id\n    };\n    addProductComments(comment);\n    setBody('');\n  }; //axios\n\n\n  const addProductComments = comment => {\n    var formData = new FormData();\n    formData.append(\"body\", comment.body);\n    formData.append(\"user\", owner);\n    formData.append(\"product\", parseInt(id, 10));\n    formData.append(\"restaurant\", parseInt(restaurant, 10));\n    axios.defaults.xsrfCookieName = 'csrftoken';\n    axios.defaults.xsrfHeaderName = 'X-CSRFToken';\n    axios.post(`http://18.192.205.152/api/product_comments/${id}/`, formData).then(res => {\n      setComments(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  const commentsList = comments.map(comment => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment-box\",\n    key: comment.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ProfilePhoto, {\n    username: comment.user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, comment.body, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"black-color\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \"- \", formatTime(comment.date))), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  })));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"scroll\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, comments.length > 0 ? commentsList : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card card-body  setMarginBottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"body\",\n    onChange: e => setBody(e.target.value),\n    value: body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"Comment\")))));\n}\n\nfunction formatTime(time) {\n  let prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  const t = new Date(time).toLocaleDateString();\n  return t;\n}\n\nexport default ProductComments;","map":{"version":3,"sources":["/home/omar/Documents/inspery-FrontEnd/inspery/src/components/comments/ProductComments.js"],"names":["React","useEffect","useContext","useState","useNavigate","axios","Context","ProfilePhoto","ProductComments","id","restaurant","user","isAuthenticated","comments","setComments","owner","parseInt","body","setBody","date","Date","navigate","getProductComments","get","then","res","data","catch","err","console","log","onSubmit","e","preventDefault","comment","addProductComments","formData","FormData","append","defaults","xsrfCookieName","xsrfHeaderName","post","commentsList","map","formatTime","length","target","value","time","prefix","t","toLocaleDateString"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\"\nimport axios from \"axios\";\n\nimport {Context} from '../../contexts/UserContext'\nimport ProfilePhoto from \"../profile/ProfilePhoto\";\nfunction ProductComments({id,restaurant}){\n    const {user, isAuthenticated} = useContext(Context)\n    const [comments,setComments]= useState([])\n    const [owner]= useState(parseInt(user.id))\n    const [body,setBody]= useState('')\n    const [date]= useState(new Date())\n    const navigate = useNavigate();\n\n    useEffect(() => {\n      if (isAuthenticated === false) {\n        navigate(\"/login\");\n      }\n      const getProductComments = ()  => {\n        axios.get(`http://18.192.205.152/api/product_comments/${id}`)\n        .then(res => {\n\n           setComments(res.data)\n        }).catch(err => console.log(err));\n      }\n        getProductComments()\n    },[id,isAuthenticated,navigate])\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        const comment =  { date, owner,restaurant ,body, id};\n        addProductComments(comment);\n        setBody('')\n      };\n\n    //axios\n    const addProductComments = (comment )=>  {\n\n        var formData = new FormData();\n          formData.append(\"body\", comment.body); \n          formData.append(\"user\", owner);\n          formData.append(\"product\", parseInt(id , 10 ));\n          formData.append(\"restaurant\",parseInt(restaurant , 10 ) );\n          axios.defaults.xsrfCookieName = 'csrftoken'\n          axios.defaults.xsrfHeaderName = 'X-CSRFToken'\n          axios\n            .post(`http://18.192.205.152/api/product_comments/${id}/`,formData).then((res) => {\n             setComments(res.data)\n          })\n          .catch((err) => console.log(err));\n      };\n            \n  \n      \n\n        const commentsList = comments.map((comment) => (\n            <div className=\"comment-box\" key={comment.id}>\n              <ProfilePhoto username={comment.user} />\n              <div className=\"text-box\">\n                {comment.body}\n                <p className=\"black-color\">- {formatTime(comment.date)}</p>\n              </div>\n              <ul></ul>\n            </div>\n          ));\n\n    return(\n        <div className='content' >\n            <div className=\"scroll\">\n            {comments.length > 0 ?  commentsList : null}\n        \n        </div>\n            <div className=\"card card-body  setMarginBottom\">\n    <form onSubmit={onSubmit}>\n        <div className=\"form-group\">\n            <textarea\n            className=\"form-control\"\n            type=\"text\"\n            name=\"body\"\n            onChange={(e) => setBody(e.target.value)}\n            value={body}\n            />\n        </div>\n        <div className=\"form-group\">\n            <button type=\"submit\" className=\"btn btn-primary\">\n            Comment\n            </button>\n        </div>\n        </form>\n    </div>\n        </div>\n        )\n}\n\nfunction formatTime(time, prefix = \"\") {\n    const t = new Date(time).toLocaleDateString();\n    return t;\n}\n\nexport default ProductComments"]},"metadata":{},"sourceType":"module"}