{"version":3,"sources":["contexts/UserContext.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","UserContext","children","useState","token","setToken","isAuthenticated","setIsAuthenticated","email","id","username","user","setUser","useEffect","axios","defaults","headers","common","localStorage","clear","userData","JSON","parse","Provider","value","Main","loadable","Rescategory","Restaurant","Header","Register","LogIn","Menu","MyChoice","App","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAEMA,EAAUC,IAAMC,gBAEtB,SAASC,EAAT,GAAkC,IAAZC,EAAW,EAAXA,SAClB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8CF,oBAAS,GAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KACA,EAAwBJ,mBAAS,CACDK,MAAM,GACNC,GAAG,EACHC,SAAS,KAHzC,mBAAOC,EAAP,KAAaC,EAAb,KAmBA,OAdAC,qBAAU,kBACCC,IAAMC,SAASC,QAAQC,OAAvB,cACPC,aAAaC,QAEb,IAAKC,EAAW,KACbF,aAAaE,WACZA,EAAUC,KAAKC,MAAMJ,aAAaE,WAEnCA,IACEb,GAAmB,GACnBF,EAASe,EAAShB,OAClBQ,EAAQQ,EAAST,SAExB,IAEE,kBAACb,EAAQyB,SAAT,CAAkBC,MAAO,CACrBpB,QACAC,WACAC,kBACAC,qBACAI,OACAC,YAECV,K,wLC5BPuB,G,MAAOC,aAAS,kBAAM,yDACtBC,EAAcD,aAAS,kBAAM,iCAC7BE,EAAaF,aAAS,kBAAM,iCAC5BG,EAASH,aAAS,kBAAM,yDACxBI,EAAWJ,aAAS,kBAAM,iCAC1BK,EAAQL,aAAS,kBAAM,iCACvBM,EAAON,aAAS,kBAAM,kCACtBO,EAAWP,aAAS,kBAAM,iCAiCjBQ,MAvBf,WACE,OACE,kBAAC,IAAD,KACI,kBAAC,WAAD,KAEI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,QAAS,kBAACZ,EAAD,QAC/B,kBAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,gCAAgCC,QAAS,kBAACV,EAAD,QAC3D,kBAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,4BAA4BC,QAAS,kBAACT,EAAD,QACvD,kBAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,gBAAgBC,QAAS,kBAACP,EAAD,QAC3C,kBAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,SAASC,QAAS,kBAACN,EAAD,QACpC,kBAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,iCAAiCC,QAAS,kBAACL,EAAD,QAC5D,kBAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,YAAYC,QAAS,kBAACJ,EAAD,SAG3C,kBAACJ,EAAD,SC3BGS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCAdQ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAChD,EAAA,EAAD,KACE,kBAAC,EAAD,QAGJiD,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.25b68474.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\"\nimport axios from \"axios\";\nconst Context = React.createContext()\n\nfunction UserContext({children}) {\n    const [token, setToken] = useState('')\n    const [isAuthenticated, setIsAuthenticated] = useState(false)\n    const [user, setUser] = useState({\n                                    email:'',\n                                    id:0,\n                                    username:'', \n                                })\n    useEffect(()=>{\n        delete axios.defaults.headers.common[\"Authorization\"];\n        localStorage.clear()\n\n        let  userData = null\n        if(localStorage.userData ){\n            userData= JSON.parse(localStorage.userData)\n        }\n        if(userData){\n             setIsAuthenticated(true)\n             setToken(userData.token)\n             setUser(userData.user)\n        }\n    },[])\n    return (\n        <Context.Provider value={{\n            token, \n            setToken, \n            isAuthenticated, \n            setIsAuthenticated, \n            user, \n            setUser\n        }}>\n            {children}\n        </Context.Provider>\n    )\n}\n\nexport {UserContext, Context}","import React, { Fragment } from \"react\"\nimport { Routes ,Route } from 'react-router-dom';\nimport {BrowserRouter as Router} from \"react-router-dom\"\nimport loadable from '@loadable/component'\n\nimport \"./static/styles.scss\"\n\nconst Main = loadable(() => import('./pages/Main'));\nconst Rescategory = loadable(() => import('./pages/Rescategory'));\nconst Restaurant = loadable(() => import('./pages/Restaurant'));\nconst Header = loadable(() => import('./components/layouts/Header'));\nconst Register = loadable(() => import('./components/accounts/Register'));\nconst LogIn = loadable(() => import('./components/accounts/LogIn'));\nconst Menu = loadable(() => import('./components/menu/Menu'));\nconst MyChoice = loadable(() => import('./components/myChoice/MyChoice'));\n\n// import Main from \"./pages/Main\"\n// import Rescategory from \"./pages/Rescategory\"\n// import Restaurant from \"./pages/Restaurant\"\n// import Header from \"./components/layouts/Header\"\n// import Register from \"./components/accounts/Register\"\n// import LogIn from \"./components/accounts/LogIn\"\n// import Menu from \"./components/menu/Menu\"\n\nfunction App() {\n  return (\n    <Router>    \n        <Fragment>\n            {/* <Rescategorys/> */}    \n            <Routes>\n                <Route exact path=\"/\" element={<Main/>} />\n                <Route exact path=\"/rescategory/:RescategoryName\" element={<Rescategory/>} />\n                <Route exact path=\"/restaurant/:RestaurantId\" element={<Restaurant/>} />\n                <Route exact path=\"/regestration\" element={<Register/>} />\n                <Route exact path=\"/login\" element={<LogIn/>} />\n                <Route exact path=\"/restaurant/:RestaurantId/menu\" element={<Menu/>} />\n                <Route exact path=\"/MyChoice\" element={<MyChoice/>} />\n\n            </Routes>\n            <Header/>\n        </Fragment>\n    </Router>\n     \n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {UserContext} from './contexts/UserContext'\n\nReactDOM.render(\n  <React.StrictMode>\n    <UserContext>\n      <App />\n    </UserContext>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}