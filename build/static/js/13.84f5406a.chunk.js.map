{"version":3,"sources":["components/Rescategorys.js","pages/Main.js","components/common/card.js"],"names":["Rescategorys","useState","loading","setLoading","currentPage","setCurrentPage","categoryPerPage","rescategorys","setRescategorys","totalRescategorys","setTotalRescategorys","showCategory","setShowCategory","pageNumbers","Math","ceil","useEffect","axios","get","crossDomain","withCredentials","then","response","data","length","a","indexOfFirstCategory","indexOfLastCategory","currentCategorys","slice","prev","loadCategorys","cards","map","rescategory","key","id","item","link","name","className","onScroll","event","currentTarget","scrollTop","clientHeight","scrollHeight","Row","Main","Card","props","xs","lg","to","src","picture","profile_pic","alt"],"mappings":"0MAyEeA,MApEf,WACE,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAA0BJ,mBAAS,GAA5BK,EAAP,oBACA,EAAwCL,mBAAS,IAAjD,mBAAOM,EAAP,KAAqBC,EAArB,KACA,EAAkDP,mBAAS,GAA3D,mBAAOQ,EAAP,KAA0BC,EAA1B,KACA,EAAwCT,mBAAS,IAAjD,mBAAOU,EAAP,KAAqBC,EAArB,KAEMC,EAAcC,KAAKC,KAAKN,EAAoBH,GAClDU,qBAAU,WACRC,IACGC,IACC,0CACA,CAAEC,aAAa,GACf,CAAEC,iBAAiB,IAEpBC,MAAK,SAACC,GACLd,EAAgBc,EAASC,MACzBb,EAAqBY,EAASC,KAAKC,aAEtC,IAUHR,qBAAU,YACW,uCAAG,gCAAAS,EAAA,sDACpBtB,GAAW,GAELuB,GADAC,EAAsBvB,EAAcE,GACSA,EAC7CsB,EAAmBrB,EAAasB,MAAMH,EAAsBC,GAClEf,GAAgB,SAACkB,GAAD,4BAAcA,GAAd,YAAuBF,OACvCzB,GAAW,GANS,2CAAH,qDAQnB4B,KACC,CAAC3B,EAAYG,EAAaD,IAE7B,IAAM0B,EAAQrB,EAAasB,KAAI,SAACC,GAAD,OAC7B,kBAAC,IAAD,CACEC,IAAKD,EAAYE,GACjBC,KAAMH,EACNI,KAAI,uBAAkBJ,EAAYK,WAItC,OACE,6BACE,iCACE,yBAAKC,UAAU,kBAAkBC,SA/BlB,SAACC,GACpB,MAAkDA,EAAMC,cAAhDC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,aAAcC,EAAjC,EAAiCA,aAC9B1C,EAAa,EAAIS,GAChBiC,EAAeF,IAAcC,GAC/BxC,GAAe,SAACyB,GAAD,OAAUA,EAAO,OA4B5B,wBAAIU,UAAU,aAAd,QACA,kBAACO,EAAA,EAAD,KACGf,GAEF9B,GAAW,+CCzDP8C,UAJf,WACI,OAAO,kBAAC,EAAD,Q,gCCHX,oCAqBeC,IAjBf,SAAcC,GACZ,OACE,kBAAC,IAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIjB,IAAKe,EAAMb,KAAKD,GAAII,UAAU,iBAC/C,kBAAC,IAAD,CAAMa,GAAIH,EAAMZ,KAAME,UAAU,gBAC9B,yBACEc,IAAKJ,EAAMb,KAAKkB,QAAUL,EAAMb,KAAKkB,QAAUL,EAAMb,KAAKmB,YAC1DC,IAAI,SACJjB,UAAU,UAEZ,yBAAKA,UAAU,iBACb,2BAAIU,EAAMb,KAAKE","file":"static/js/13.84f5406a.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport { Row } from \"react-bootstrap\";\nimport Card from \"./common/card\";\nfunction Rescategorys() {\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [categoryPerPage] = useState(4);\n  const [rescategorys, setRescategorys] = useState([]);\n  const [totalRescategorys, setTotalRescategorys] = useState(0);\n  const [showCategory, setShowCategory] = useState([]);\n\n  const pageNumbers = Math.ceil(totalRescategorys / categoryPerPage);\n  useEffect(() => {\n    axios\n      .get(\n        \"http://18.192.205.152/api/rescategorys/\",\n        { crossDomain: true },\n        { withCredentials: true }\n      )\n      .then((response) => {\n        setRescategorys(response.data);\n        setTotalRescategorys(response.data.length);\n      });\n  }, []);\n\n  const handleScroll = (event) => {\n    const { scrollTop, clientHeight, scrollHeight } = event.currentTarget;\n    if(currentPage +1 > pageNumbers)return\n    if (scrollHeight - scrollTop === clientHeight) {\n      setCurrentPage((prev) => prev + 1);\n    }\n  };\n\n  useEffect(() => {\n    const loadCategorys = async () => {\n      setLoading(true);\n      const indexOfLastCategory = currentPage * categoryPerPage;\n      const indexOfFirstCategory = indexOfLastCategory - categoryPerPage;\n      const currentCategorys = rescategorys.slice(indexOfFirstCategory, indexOfLastCategory);\n      setShowCategory((prev) => [...prev, ...currentCategorys]);\n      setLoading(false);\n    };\n    loadCategorys();\n  }, [currentPage,rescategorys,categoryPerPage]);\n\n  const cards = showCategory.map((rescategory) => (\n    <Card\n      key={rescategory.id}\n      item={rescategory}\n      link={`/rescategory/${rescategory.name}`}\n    />\n  ));\n\n  return (\n    <div>\n      <section>\n        <div className=\"container-fluid\" onScroll={handleScroll}>\n          <h1 className=\"page-name\">MAIN</h1>\n          <Row >\n            {cards}\n          </Row>\n          {loading && <h1>Loading ...</h1>}\n        </div>\n      </section>\n    </div>\n  );\n}\n\nRescategorys.propTypes = {\n  rescategorys: PropTypes.array,\n};\nexport default Rescategorys;\n","import React from \"react\"\nimport Rescategorys from \"../components/Rescategorys\"\nfunction Main(){\n    return(<Rescategorys/>)\n}\n\nexport default Main","import React from 'react';\nimport { Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nfunction Card(props) {\n  return (\n    <Col xs=\"6\" lg=\"3\" key={props.item.id} className=\"res-container\">\n      <Link to={props.link} className=\"product-card\">\n        <img\n          src={props.item.picture ? props.item.picture : props.item.profile_pic}\n          alt=\"nofoto\"\n          className=\"w-100\"\n        />\n        <div className=\"product-title\">\n          <p>{props.item.name}</p>\n        </div>\n      </Link>\n    </Col>\n  );\n}\n\nexport default Card;\n"],"sourceRoot":""}