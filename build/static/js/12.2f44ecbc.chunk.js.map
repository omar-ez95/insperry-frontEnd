{"version":3,"sources":["components/profile/ProfilePhoto.js","components/comments/ProductComments.js"],"names":["ProfilePhoto","props","useState","user","setUser","useEffect","axios","get","username","crossDomain","withCredentials","then","response","data","className","first_name","src","picture","alt","ProductComments","id","restaurant","useContext","Context","isAuthenticated","comments","setComments","parseInt","owner","body","setBody","Date","date","navigate","useNavigate","res","catch","err","console","log","addProductComments","comment","formData","FormData","append","defaults","xsrfCookieName","xsrfHeaderName","post","commentsList","map","key","time","t","toLocaleDateString","formatTime","length","onSubmit","e","preventDefault","type","name","onChange","target","value"],"mappings":"gJAyBeA,IAtBf,SAAsBC,GACpB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAaA,OAZAC,qBAAU,WACRC,IACGC,IADH,4CAEyCN,EAAMO,UAC3C,CAAEC,aAAa,GACf,CAAEC,iBAAiB,IAEpBC,MAAK,SAACC,GACLR,EAAQQ,EAASC,WAEpB,CAACZ,EAAMO,WAGR,yBAAKM,UAAU,wBACb,uBAAGA,UAAU,eAAeX,EAAKY,YACjC,yBAAKC,IAAK,yBAA2Bb,EAAKc,QAASC,IAAI,Q,0GC+E9CC,UA7Ff,YAA0C,IAAhBC,EAAe,EAAfA,GAAGC,EAAY,EAAZA,WACzB,EAAgCC,qBAAWC,KAApCpB,EAAP,EAAOA,KAAMqB,EAAb,EAAaA,gBACb,EAA8BtB,mBAAS,IAAvC,mBAAOuB,EAAP,KAAgBC,EAAhB,KACA,EAAexB,mBAASyB,SAASxB,EAAKiB,KAA/BQ,EAAP,oBACA,EAAsB1B,mBAAS,IAA/B,mBAAO2B,EAAP,KAAYC,EAAZ,KACA,EAAc5B,mBAAS,IAAI6B,MAApBC,EAAP,oBACMC,EAAWC,cAEjB7B,qBAAU,YACgB,IAApBmB,GACFS,EAAS,UAGT3B,IAAMC,IAAN,qDAAwDa,IACvDT,MAAK,SAAAwB,GAEHT,EAAYS,EAAItB,SAChBuB,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAG9B,CAACjB,EAAGI,EAAgBS,IAEtB,IAQMO,EAAqB,SAACC,GAExB,IAAIC,EAAW,IAAIC,SACjBD,EAASE,OAAO,OAAQH,EAAQZ,MAChCa,EAASE,OAAO,OAAQhB,GACxBc,EAASE,OAAO,UAAWjB,SAASP,EAAK,KACzCsB,EAASE,OAAO,aAAajB,SAASN,EAAa,KACnDf,IAAMuC,SAASC,eAAiB,YAChCxC,IAAMuC,SAASE,eAAiB,cAChCzC,IACG0C,KADH,qDACsD5B,EADtD,KAC4DsB,GAAU/B,MAAK,SAACwB,GACzET,EAAYS,EAAItB,SAElBuB,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,OAMxBY,EAAexB,EAASyB,KAAI,SAACT,GAAD,OAC9B,yBAAK3B,UAAU,cAAcqC,IAAKV,EAAQrB,IACxC,kBAAC,IAAD,CAAcZ,SAAUiC,EAAQtC,OAChC,yBAAKW,UAAU,YACZ2B,EAAQZ,KACT,uBAAGf,UAAU,eAAb,KAkChB,SAAoBsC,GAAoB,IAC9BC,EAAI,IAAItB,KAAKqB,GAAME,qBACzB,OAAOD,EApCmCE,CAAWd,EAAQT,QAEnD,iCAIV,OACI,yBAAKlB,UAAU,WACX,yBAAKA,UAAU,UACdW,EAAS+B,OAAS,EAAKP,EAAe,MAGvC,yBAAKnC,UAAU,mCACvB,0BAAM2C,SA7CW,SAACC,GACdA,EAAEC,iBAEFnB,EADiB,CAAER,OAAMJ,QAAMP,aAAYQ,OAAMT,OAEjDU,EAAQ,MA0CR,yBAAKhB,UAAU,cACX,8BACAA,UAAU,eACV8C,KAAK,OACLC,KAAK,OACLC,SAAU,SAACJ,GAAD,OAAO5B,EAAQ4B,EAAEK,OAAOC,QAClCA,MAAOnC,KAGX,yBAAKf,UAAU,cACX,4BAAQ8C,KAAK,SAAS9C,UAAU,mBAAhC","file":"static/js/12.2f44ecbc.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction ProfilePhoto(props) {\n  const [user, setUser] = useState({});\n  useEffect(() => {\n    axios\n      .get(\n        `http://18.192.205.152/api/profile/${props.username}`,\n        { crossDomain: true },\n        { withCredentials: true }\n      )\n      .then((response) => {\n        setUser(response.data);\n      });\n  }, [props.username]);\n\n  return (\n    <div className=\"comment-image-holder\">\n      <p className=\"black-color\">{user.first_name}</p>\n      <img src={\"http://18.192.205.152/\" + user.picture} alt=\"\" />\n    </div>\n  );\n}\n\nexport default ProfilePhoto;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\"\nimport axios from \"axios\";\n\nimport {Context} from '../../contexts/UserContext'\nimport ProfilePhoto from \"../profile/ProfilePhoto\";\nfunction ProductComments({id,restaurant}){\n    const {user, isAuthenticated} = useContext(Context)\n    const [comments,setComments]= useState([])\n    const [owner]= useState(parseInt(user.id))\n    const [body,setBody]= useState('')\n    const [date]= useState(new Date())\n    const navigate = useNavigate();\n\n    useEffect(() => {\n      if (isAuthenticated === false) {\n        navigate(\"/login\");\n      }\n      const getProductComments = ()  => {\n        axios.get(`http://18.192.205.152/api/product_comments/${id}`)\n        .then(res => {\n\n           setComments(res.data)\n        }).catch(err => console.log(err));\n      }\n        getProductComments()\n    },[id,isAuthenticated,navigate])\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        const comment =  { date, owner,restaurant ,body, id};\n        addProductComments(comment);\n        setBody('')\n      };\n\n    //axios\n    const addProductComments = (comment )=>  {\n\n        var formData = new FormData();\n          formData.append(\"body\", comment.body); \n          formData.append(\"user\", owner);\n          formData.append(\"product\", parseInt(id , 10 ));\n          formData.append(\"restaurant\",parseInt(restaurant , 10 ) );\n          axios.defaults.xsrfCookieName = 'csrftoken'\n          axios.defaults.xsrfHeaderName = 'X-CSRFToken'\n          axios\n            .post(`http://18.192.205.152/api/product_comments/${id}/`,formData).then((res) => {\n             setComments(res.data)\n          })\n          .catch((err) => console.log(err));\n      };\n            \n  \n      \n\n        const commentsList = comments.map((comment) => (\n            <div className=\"comment-box\" key={comment.id}>\n              <ProfilePhoto username={comment.user} />\n              <div className=\"text-box\">\n                {comment.body}\n                <p className=\"black-color\">- {formatTime(comment.date)}</p>\n              </div>\n              <ul></ul>\n            </div>\n          ));\n\n    return(\n        <div className='content' >\n            <div className=\"scroll\">\n            {comments.length > 0 ?  commentsList : null}\n        \n        </div>\n            <div className=\"card card-body  setMarginBottom\">\n    <form onSubmit={onSubmit}>\n        <div className=\"form-group\">\n            <textarea\n            className=\"form-control\"\n            type=\"text\"\n            name=\"body\"\n            onChange={(e) => setBody(e.target.value)}\n            value={body}\n            />\n        </div>\n        <div className=\"form-group\">\n            <button type=\"submit\" className=\"btn btn-primary\">\n            Comment\n            </button>\n        </div>\n        </form>\n    </div>\n        </div>\n        )\n}\n\nfunction formatTime(time, prefix = \"\") {\n    const t = new Date(time).toLocaleDateString();\n    return t;\n}\n\nexport default ProductComments"],"sourceRoot":""}